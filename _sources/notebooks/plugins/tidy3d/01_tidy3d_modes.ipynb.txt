{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "f9bd8640-22b8-4f38-9ace-54f6c329d258",
   "metadata": {},
   "source": [
    "# Tidy3D mode solver\n",
    "\n",
    "Tidy3d comes with an open source FDFD [mode solver](https://docs.flexcompute.com/projects/tidy3d/en/latest/notebooks/ModeSolver.html)\n",
    "\n",
    "## Waveguides\n",
    "\n",
    "Guided Electromagnetic modes are the ones that have an effective index larger than the cladding of the waveguide\n",
    "\n",
    "Here is a waveguide of Silicon (n=3.4) surrounded by SiO2 (n=1.44) cladding\n",
    "\n",
    "For a 220 nm height x 450 nm width the effective index is 2.466"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "93e34a98-7fe7-4bbe-95ee-a5d8d94a5259",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import gdsfactory.simulation.gtidy3d as gt\n",
    "import matplotlib.pyplot as plt\n",
    "import gdsfactory as gf\n",
    "\n",
    "gf.config.rich_output()\n",
    "PDK = gf.generic_tech.get_generic_pdk()\n",
    "PDK.activate()\n",
    "\n",
    "nm = 1e-3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5d23a15a",
   "metadata": {},
   "outputs": [],
   "source": [
    "strip = gt.modes.Waveguide(\n",
    "    wavelength=1.55,\n",
    "    wg_width=0.5,\n",
    "    wg_thickness=0.22,\n",
    "    slab_thickness=0.0,\n",
    "    ncore=\"si\",\n",
    "    nclad=\"sio2\",\n",
    ")\n",
    "strip.plot_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "60dcd64d",
   "metadata": {},
   "outputs": [],
   "source": [
    "strip.plot_Ex(0)  # TE\n",
    "strip.plot_Ey(1)  # TM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0300ab46-1606-4c3a-a5b4-76aec1174673",
   "metadata": {},
   "outputs": [],
   "source": [
    "strip.neffs[0].real"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "aeee769d-0f21-44dd-8cc8-4b8e186bb6d4",
   "metadata": {},
   "outputs": [],
   "source": [
    "rib = gt.modes.Waveguide(\n",
    "    wavelength=1.55,\n",
    "    wg_width=0.5,\n",
    "    wg_thickness=0.22,\n",
    "    slab_thickness=0.15,\n",
    "    ncore=\"si\",\n",
    "    nclad=\"sio2\",\n",
    ")\n",
    "rib.plot_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dcda6632-f368-427f-a6c8-e65afc6a2306",
   "metadata": {},
   "outputs": [],
   "source": [
    "rib.plot_Ex(mode_index=0)\n",
    "rib.plot_Ey(mode_index=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2e1ac745",
   "metadata": {},
   "outputs": [],
   "source": [
    "nitride = gt.modes.Waveguide(\n",
    "    wavelength=1.55,\n",
    "    wg_width=1.0,\n",
    "    wg_thickness=0.4,\n",
    "    slab_thickness=0.0,\n",
    "    ncore=\"si\",\n",
    "    nclad=\"sio2\",\n",
    ")\n",
    "nitride.plot_index()\n",
    "nitride.plot_Ex(0)\n",
    "nitride.plot_Ey(0)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1b22eef9-6c46-41fe-a1a4-46638fc7f437",
   "metadata": {},
   "source": [
    "## Sweep width\n",
    "\n",
    "You can sweep the waveguide width and compute the modes.\n",
    "\n",
    "By increasing the waveguide width, the waveguide supports many more TE and TM modes. Where TE modes have a dominant Ex field and TM modes have larger Ey fields.\n",
    "\n",
    "Notice that waveguides wider than 0.450 um support more than one TE mode. Therefore the maximum width for single mode operation is 0.450 um.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9e395e46-a14a-4e19-b86e-32c6f86618b5",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = gt.modes.sweep_width(\n",
    "    width1=200 * nm,\n",
    "    width2=1000 * nm,\n",
    "    steps=11,\n",
    "    wavelength=1.55,\n",
    "    wg_thickness=220 * nm,\n",
    "    slab_thickness=0 * nm,\n",
    "    ncore=\"si\",\n",
    "    nclad=\"sio2\",\n",
    ")\n",
    "gt.modes.plot_sweep_width(\n",
    "    width1=200 * nm,\n",
    "    width2=1000 * nm,\n",
    "    steps=11,\n",
    "    wavelength=1.55,\n",
    "    wg_thickness=220 * nm,\n",
    "    slab_thickness=0 * nm,\n",
    "    ncore=\"si\",\n",
    "    nclad=\"sio2\",\n",
    ")\n",
    "plt.axhline(y=1.44, color=\"k\", linestyle=\"--\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b0c4bc3a-397d-49c7-8c9d-e4db1bc03ba2",
   "metadata": {},
   "source": [
    "**Exercises**\n",
    "\n",
    "- What is the maximum width to support a single TE mode at 1310 nm?\n",
    "- For a Silicon Nitride (n=2) 400nm thick waveguide surrounded by SiO2 (n=1.44), what is the maximum width to support a single TE mode at 1550 nm?\n",
    "- For two 500x220nm Silicon waveguides surrounded by SiO2, what is the coupling length (100% coupling) for 200 nm gap?\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0f8d5d20-e0f8-4fe5-82f7-14056e94d4ca",
   "metadata": {},
   "source": [
    "## Group index\n",
    "\n",
    "You can also compute the group index for a waveguide."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7e7e2ad4-5ea3-43e0-8656-4b5d526c09c8",
   "metadata": {},
   "outputs": [],
   "source": [
    "nm = 1e-3\n",
    "\n",
    "ng = gt.modes.group_index(\n",
    "    wg_width=500 * nm,\n",
    "    wavelength=1.55,\n",
    "    wg_thickness=220 * nm,\n",
    "    slab_thickness=0 * nm,\n",
    "    ncore=\"si\",\n",
    "    nclad=\"sio2\",\n",
    ")\n",
    "print(ng)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "141b61d9-a8c1-4f01-9ca5-f6d6110f0e28",
   "metadata": {},
   "outputs": [],
   "source": [
    "nm = 1e-3\n",
    "wg_widths = np.array([490, 500, 510]) * nm\n",
    "wg_settings = dict(\n",
    "    wg_thickness=220 * nm,\n",
    "    slab_thickness=0 * nm,\n",
    "    ncore=\"si\",\n",
    "    nclad=\"sio2\",\n",
    ")\n",
    "\n",
    "ng = [\n",
    "    gt.modes.group_index(wavelength=1550 * nm, wg_width=wg_width, **wg_settings)\n",
    "    for wg_width in wg_widths\n",
    "]\n",
    "plt.plot(wg_widths * 1e3, ng)\n",
    "plt.xlabel(\"waveguide width (nm)\")\n",
    "plt.ylabel(\"ng\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "055d38f7-4916-4d49-86bf-81acf3964281",
   "metadata": {},
   "source": [
    "## Bend modes\n",
    "\n",
    "You can compute bend modes specifying the bend radius."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "157fc2fe-9037-419d-8e39-ae9191871552",
   "metadata": {},
   "outputs": [],
   "source": [
    "strip_bend = gt.modes.Waveguide(\n",
    "    wavelength=1.55,\n",
    "    wg_width=0.5,\n",
    "    wg_thickness=0.22,\n",
    "    slab_thickness=0.0,\n",
    "    bend_radius=3,\n",
    "    ncore=\"si\",\n",
    "    nclad=\"sio2\",\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "14899a2b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# plot the fundamental TE mode\n",
    "strip_bend.plot_Ex(0)\n",
    "strip_bend.plot_Ey(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "15095b57",
   "metadata": {},
   "outputs": [],
   "source": [
    "# plot the fundamental TM mode\n",
    "strip_bend.plot_Ex(1)\n",
    "strip_bend.plot_Ey(1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "43100bb1",
   "metadata": {},
   "source": [
    "## Bend loss\n",
    "\n",
    "You can also compute the losses coming from the mode mismatch from the bend into a straight waveguide.\n",
    "To compute the bend loss due to mode mismatch you can calculate the mode overlap of the straight mode and the bent mode.\n",
    "Because there are two mode mismatch interfaces the total loss due to mode mismatch will be squared (from bend to straight and from straight to bend).\n",
    "\n",
    "![](https://i.imgur.com/M1Yysdr.png)\n",
    "\n",
    "[from paper](https://ieeexplore.ieee.org/ielaam/50/8720127/8684870-aam.pdf)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a8ff2d99",
   "metadata": {},
   "outputs": [],
   "source": [
    "r, integral = gt.modes.sweep_bend_loss(\n",
    "    wavelength=1.55,\n",
    "    wg_width=0.5,\n",
    "    wg_thickness=0.22,\n",
    "    slab_thickness=0.0,\n",
    "    bend_radius_min=2.0,\n",
    "    bend_radius_max=5,\n",
    "    steps=4,\n",
    "    mode_index=0,\n",
    "    ncore=\"si\",\n",
    "    nclad=\"sio2\",\n",
    ")\n",
    "\n",
    "plt.title(\"Bend90 loss for TE polarization\")\n",
    "plt.plot(r, integral, \".\")\n",
    "plt.xlabel(\"bend radius (um)\")\n",
    "plt.ylabel(\"Transmission\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cb2c6bd2-281b-462a-91c4-9a5164016b74",
   "metadata": {},
   "outputs": [],
   "source": [
    "dB_cm = 2  # dB/cm\n",
    "length = 2 * np.pi * r * 1e-6\n",
    "propagation_loss = dB_cm * length * 1e2\n",
    "propagation_loss"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "01ffda5a-1ee2-4a3c-a7a7-14a590d47257",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.title(\"Bend90 loss for TE polarization\")\n",
    "plt.plot(r, -10 * np.log10(integral), \".\", label=\"mode loss\")\n",
    "plt.plot(r, propagation_loss, \".\", label=\"propagation loss\")\n",
    "plt.xlabel(\"bend radius (um)\")\n",
    "plt.ylabel(\"Loss (dB)\")\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fcefe8af-b080-44a1-a744-4e35c80660e2",
   "metadata": {},
   "outputs": [],
   "source": [
    "r, integral = gt.modes.sweep_bend_loss(\n",
    "    wavelength=1.55,\n",
    "    wg_width=0.5,\n",
    "    wg_thickness=0.22,\n",
    "    slab_thickness=0.0,\n",
    "    bend_radius_min=3.0,\n",
    "    bend_radius_max=20,\n",
    "    steps=4,\n",
    "    mode_index=1,\n",
    "    ncore=\"si\",\n",
    "    nclad=\"sio2\",\n",
    ")\n",
    "\n",
    "plt.title(\"Bend90 loss for TM polarization\")\n",
    "plt.ylim(ymin=min(integral), ymax=1)\n",
    "plt.plot(r, integral, \".\")\n",
    "plt.xlabel(\"bend radius (um)\")\n",
    "plt.ylabel(\"Transmission\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dc728f7d-730e-4060-a07a-9280f4c496dd",
   "metadata": {},
   "outputs": [],
   "source": [
    "dB_cm = 1  # dB/cm\n",
    "length = 2 * np.pi * r * 1e-6\n",
    "propagation_loss = dB_cm * length * 1e2\n",
    "propagation_loss"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e2c5b892-4b26-43b1-9e2d-7dec910e8ee6",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.plot(r, -10 * np.log10(integral), \".\", label=\"mode loss\")\n",
    "plt.plot(r, propagation_loss, \".\", label=\"propagation loss\")\n",
    "plt.title(\"Bend90 loss for TM polarization\")\n",
    "plt.xlabel(\"bend radius (um)\")\n",
    "plt.ylabel(\"Loss (dB)\")\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8f877f0e-ca50-4dbc-af6a-74197188ba04",
   "metadata": {},
   "source": [
    "**Exercises**\n",
    "\n",
    "- For a 500nm wide 220nm thick Silicon waveguide surrounded by SiO2, what is the minimum bend radius to have less than 0.04dB loss for TE polarization at 1550nm?\n",
    "- For a 500nm wide 220nm thick Silicon waveguide surrounded by SiO2, what is the minimum bend radius to have 99% power transmission for TM polarization at 1550nm?"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "28003695-d5e4-4c1f-835a-b49c7b903ede",
   "metadata": {},
   "source": [
    "## Waveguide coupler\n",
    "\n",
    "You can also compute the modes of a waveguide coupler.\n",
    "\n",
    "```\n",
    "        wg_width1     wg_width2\n",
    "        <------->     <------->\n",
    "         _______       _______   _\n",
    "        |       |     |       | |\n",
    "        |       |     |       |  \n",
    "        |       |_____|       | | wg_thickness\n",
    "        |slab_thickness       |  \n",
    "        |_____________________| |_\n",
    "                <----->\n",
    "                  gap\n",
    "\n",
    "\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4f461b95-a6a5-4ce6-bdee-ab637f940495",
   "metadata": {},
   "outputs": [],
   "source": [
    "c = gt.modes.WaveguideCoupler(\n",
    "    wavelength=1.55,\n",
    "    wg_width1=500 * nm,\n",
    "    wg_width2=500 * nm,\n",
    "    gap=200 * nm,\n",
    "    wg_thickness=220 * nm,\n",
    "    slab_thickness=100 * nm,\n",
    "    ncore=\"si\",\n",
    "    nclad=\"sio2\",\n",
    ")\n",
    "c.plot_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "db581f14-3734-4b29-af51-771aa02d1d38",
   "metadata": {},
   "outputs": [],
   "source": [
    "c.plot_Ex(0, plot_power=False)  # even\n",
    "c.plot_Ex(1, plot_power=False)  # odd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b7735ded-48de-4b8c-89da-31cd8fbdc80e",
   "metadata": {},
   "outputs": [],
   "source": [
    "c = gt.modes.WaveguideCoupler(\n",
    "    wavelength=1.55,\n",
    "    wg_width1=500 * nm,\n",
    "    wg_width2=500 * nm,\n",
    "    gap=200 * nm,\n",
    "    wg_thickness=220 * nm,\n",
    "    slab_thickness=0 * nm,\n",
    "    ncore=\"si\",\n",
    "    nclad=\"sio2\",\n",
    ")\n",
    "c.plot_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a2dc4ebb-ec92-4b41-a03a-0ba35ee0e808",
   "metadata": {},
   "outputs": [],
   "source": [
    "c.plot_Ex(0, plot_power=False)  # even\n",
    "c.plot_Ex(1, plot_power=False)  # odd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cca428b6-56e7-4055-9da0-4554d625e01f",
   "metadata": {},
   "outputs": [],
   "source": [
    "nm = 1e-3\n",
    "si = gt.modes.si\n",
    "sio2 = gt.modes.sio2\n",
    "c = gt.modes.WaveguideCoupler(\n",
    "    wavelength=1.55,\n",
    "    wg_width1=500 * nm,\n",
    "    wg_width2=500 * nm,\n",
    "    gap=200 * nm,\n",
    "    wg_thickness=220 * nm,\n",
    "    slab_thickness=0 * nm,\n",
    "    ncore=\"si\",\n",
    "    nclad=\"sio2\",\n",
    ")\n",
    "c.plot_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "310e0e43-f62e-47d0-9d1a-4060a700410f",
   "metadata": {},
   "outputs": [],
   "source": [
    "gaps = [150, 200, 250, 300]\n",
    "coupling_length = [\n",
    "    gt.modes.WaveguideCoupler(\n",
    "        wavelength=1.55,\n",
    "        wg_width1=500 * nm,\n",
    "        wg_width2=500 * nm,\n",
    "        gap=gap * nm,\n",
    "        wg_thickness=220 * nm,\n",
    "        slab_thickness=0 * nm,\n",
    "        ncore=\"si\",\n",
    "        nclad=\"sio2\",\n",
    "    ).find_coupling(power_ratio=1)\n",
    "    for gap in gaps\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e30a799f-a590-4835-8e69-b86f46208320",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.plot(gaps, coupling_length, \".\")\n",
    "plt.xlabel(\"gap (nm)\")\n",
    "plt.ylabel(\"100% coupling length (um)\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dde887f3-b4bf-4363-8707-4c29b419d5b4",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = gt.modes.find_coupling_vs_gap(\n",
    "    wg_width1=500 * nm,\n",
    "    wg_width2=500 * nm,\n",
    "    wg_thickness=220 * nm,\n",
    "    slab_thickness=0 * nm,\n",
    "    ncore=\"si\",\n",
    "    nclad=\"sio2\",\n",
    ")\n",
    "df"
   ]
  }
 ],
 "metadata": {
  "interpreter": {
   "hash": "2f4f03439a4f7fdbec20f068c10212f0605861ac4e039c961c463b9a5ef880c6"
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
